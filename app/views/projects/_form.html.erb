<div class="wrap-content container" id="container">
  <!-- start: PAGE TITLE -->
  <section id="page-title">
    <div class="row">
      <div class="col-sm-8">
        <h1 class="mainTitle"><%= t(:new_project)%></h1>
        <span class="mainDescription"><%= t(:please_enter_new_project_data)%></span>
      </div>
      <ol class="breadcrumb">
        <li>
          <span></span>
        </li>
        <li class="active">
          <span></span>
        </li>
      </ol>
    </div>
  </section>
  <div class="container-fluid container-fullw bg-white">
    <div class="row">
      <div class="col-md-12">
        <h5 class="over-title"> <span class="text-bold"></span></h5>
        <div class="panel panel-white">
          <div class="panel-body">
            <%= form_for(@project) do |f| %>
            <% if @project.errors.any? %>
            <div id="error_explanation">
              <h2><%= pluralize(@project.errors.count, "error") %> prohibited this project from being saved:</h2>

              <ul>
                <% @project.errors.full_messages.each do |message| %>
                <li><%= message %></li>
                <% end %>
              </ul>
            </div>
            <% end %>


            <div class="row">
                <div class="form-group col-xs-4">
                  * <%= f.label :name %><br>
                  <%= f.text_field :name , id: 'name', :class => "form-control" , required: '',  oninvalid: "this.setCustomValidity('#{t(:please_enter_data_in_this_field)}')"%>
                </div>
            </div>
            <div class="row">
                <div class="form-group col-xs-6">
              <%= f.label :aims %><br>
              <%= f.text_area :aims , :class => "form-control" %>
              </div>
            </div>

            <div class="row">
                <div class="selectwrap form-group col-xs-6">
              <%= f.label :project_type %><br>
              <%= f.select( :project_type, project_types, {}, {:class => "form-control"})  %>
              <% f.text_area :project_type , :class => "form-control" %>
              </div>
            </div>

            <div class="row">
                <div class="form-group col-xs-6">
              <%= f.label :definition %><br>
              <%= f.text_area :definition , :class => "form-control" %>
              </div>
            </div>

            <div class="row">
                <div class="form-group col-xs-6">
              <%= f.label :novelties %><br>
              <%= f.text_area :novelties , :class => "form-control" %>
              </div>
            </div>

            <div class="row">
                <div class="form-group col-xs-6">
              <%= f.label :methods %><br>
              <%= f.text_area :methods , :class => "form-control" %>
              </div>
            </div>

            <div class="row">
                <div class="form-group col-xs-6">
              <%= f.label :standards %><br>
              <%= f.text_area :standards , :class => "form-control" %>
              </div>
            </div>

            <div class="row">
                <div class="form-group col-xs-6">
              <%= f.label :outputs %><br>
              <%= f.text_area :outputs , :class => "form-control" %>
              </div>
            </div>

            <style>
            .ui-helper-hidden-accessible { position: absolute; left:-999em; }
            </style>

            <%=t :tags%><br />
            <% @tags = []%>
            <% for tagging in @project.taggings%>
              <% @tags << Tag.find(tagging.tag_id).title%>
            <%end%>
            <div class="col-xs-6 padding-right-0 margin-top-5 rtl">
                <input type="text"  id="tokenfield" value="<%= @tags.join(',')%>" placeholder="" tabindex="-1" >
            </div>
            <div class="row">
            <input type="hidden" id='tags' name="tags" value="">
          </div>


            <div class="row">
              <div class="form-group col-xs-4">
                <%if !@project.avatar.blank?%>
                <%= image_tag @project.avatar(:medium), id: 'avatar',:class => "messages-item-avatar bordered border-primary"%>
                <%else%>
                <img id='avatar'></img>
                <%end%>
                <div class="fileUpload btn btn-o btn-light-purple">
                  <%if @project.avatar.blank?%>
                  <span><i class="fa fa-camera" style='vertical-align:middle;'></i> <%=t :choose_a_file_for_avatar%>...</span>
                  <%else%>
                  <span><i class="fa fa-camera" style='vertical-align:middle;'></i> <%=t :change_photo%>...</span>
                  <%end%>
                  <%= f.file_field :avatar, class: "upload", onchange: "readURL(this);" %>
                </div>
              </div>
            </div>

            <script>
            function readURL(input) {
              if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                  $('#avatar')
                  .attr('src', e.target.result)
                  .width(120);
                };

                reader.readAsDataURL(input.files[0]);
              }
            }
            </script>



            <div class="row top30">
              <div class="form-group col-xs-1 pull-left">
                <%= content_tag :button, :type => :submit,id: 'subbtn', :class => "btn btn-o btn-primary" do %>
                <i class="icon-ok bigger-110"></i>
                <%=t :submit%>
                <% end %>
              </div>
            </div>
            <% end %>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>

$('#tokenfield')

.on('tokenfield:createtoken', function (e) {
    var data = e.attrs.value.split('|')
    $("#tags").val(function() {
    return this.value + ',' +data;
    });
  })


  .on('tokenfield:edittoken', function (e) {
    var data = e.attrs.value.split('|')
    var prev = $("#tags").val().split(',')
    $("#tags").val('');
    for (var i in prev) {
      if (prev[i].toString() !== data.toString()){
        console.log(prev[i]);
        $("#tags").val(function() {
        return this.value + ',' +prev[i];
        });
      }
      }
  })

  .on('tokenfield:removedtoken', function (e) {
    var data = e.attrs.value.split('|')
    var prev = $("#tags").val().split(',')
    $("#tags").val('');
    for (var i in prev) {
      if (prev[i].toString() !== data.toString()){
        console.log(prev[i]);
        $("#tags").val(function() {
        return this.value + ',' +prev[i];
        });
      }
      }
  })





.tokenfield({

  autocomplete: {
    source: function( request, response ) {
        $.ajax({
          url: "/tags/remoteq/1",
          dataType: "jsonp",
          data: {
            q: request.term
          },
          success: function( data ) {
            response( data );
          }
        });
      },
      minLength: 1,
      delay: 30
  },
  showAutocompleteOnFocus: true
})
</script>
