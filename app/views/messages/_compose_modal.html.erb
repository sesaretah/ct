<div id='compose-modal' class="modal fade "  tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h4 class="modal-title" id="myModalLabel"><%= t(:compose)%></h4>
      </div>
      <div class="modal-body centered-text">
        <% @m =  Message.new%>
        <%= form_for(@m) do |f| %>

        <div class="row">
          <div class="form-group col-xs-12">
            <%= f.label :recipient_id, :class => 'pull-right' %>
            <%= f.number_field :recipient_id , :class => "form-control" %>
          </div>
          </div>
          <div class="row">
            <div class="form-group col-xs-12">
            <%= f.label :title, :class => 'pull-right' %>
            <%= f.text_field :title , :class => "form-control" %>
            </div>
          </div>
          <div class="row">
            <div class="form-group col-xs-12">
            <%= f.label :content, :class => 'pull-right' %>
            <%= f.text_area :content, {:class=> "form-control autosize area-animated", 'data-autosize-on' => "true", style: "overflow: hidden; resize: horizontal; word-wrap: break-word;" } %>
          </div>
          </div>

          <style>
          .ui-helper-hidden-accessible { position: absolute; left:-999em; }
          </style>

          <div class="col-xs-6 padding-right-0 margin-top-5 rtl">
              <input type="text"  id="tokenfield" value="" placeholder="" tabindex="-1" >
          </div>

      </div>
      <div class="modal-footer">
        <%= content_tag :button, :type => :submit, :class => "btn btn-o btn-success" do %>
        <i class="icon-ok bigger-110"></i>
        <%=t :send%>
        <% end %>
        <button type="button" class="btn btn-primary btn-o" data-dismiss="modal">
          <%= t(:close)%>
        </button>
      </div>
      <% end %>
    </div>
  </div>
</div>

<script>

$('#tokenfield')

.on('tokenfield:createtoken', function (e) {
    var data = e.attrs.value.split('|')
    $("#tags").val(function() {
    return this.value + ',' +data;
    });
  })


  .on('tokenfield:edittoken', function (e) {
    var data = e.attrs.value.split('|')
    var prev = $("#tags").val().split(',')
    $("#tags").val('');
    for (var i in prev) {
      if (prev[i].toString() !== data.toString()){
        console.log(prev[i]);
        $("#tags").val(function() {
        return this.value + ',' +prev[i];
        });
      }
      }
  })

  .on('tokenfield:removedtoken', function (e) {
    var data = e.attrs.value.split('|')
    var prev = $("#tags").val().split(',')
    $("#tags").val('');
    for (var i in prev) {
      if (prev[i].toString() !== data.toString()){
        console.log(prev[i]);
        $("#tags").val(function() {
        return this.value + ',' +prev[i];
        });
      }
      }
  })





.tokenfield({

  autocomplete: {
    source: function( request, response ) {
        $.ajax({
          url: "/tags/remoteq/1",
          dataType: "jsonp",
          data: {
            q: request.term
          },
          success: function( data ) {
            response( data );
          }
        });
      },
      minLength: 1,
      delay: 30
  },
  showAutocompleteOnFocus: true
})
</script>
